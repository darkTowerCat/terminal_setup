#!/usr/local/bin python3

account_id = boto3.client("sts").get_caller_identity()["Account"]
response = client.describe_instances(Filters=[{"Name": "private-ip-address", "Values": [<ip>,]}])
tags = response["Reservatioins"][0]["Instances"][0]["Tags"]

client = boto3.client("logs")
log_group = f"/{log_group}"
query = f"""
fields @timestamp, @message
| filter @message like /{item}/
"""
query_response = client.start_query(
  logGroupName=log_group
  startTime=
  endTime=
  queryString=query
)
query_id = query_response["query_id"]
response = None
print("searching")
while response == None or response["status"] == "Running":
  time.sleep(1)
  response = client.get_query_results(queryId=query_id)
results = response["results"]

client = boto3.client("guardduty")
response = client.get_findings(
  Detector_Id=detector_Id,
  FindingIds=getFindingIds(past_time),
  SortCriteria={"AttributeName": "updatedAt", "OrderedBy": "ASC"},
)
#getFindingIds(time)
response = client.list_findings(
  DetectorId=detector_Id
  FindingCriteria={"Criterion": {"updatedAt": {"GreaterThanOrEqual": ""}, "serverity": {"GreaterThanOrEqual": ""}}}
)
findings = response.get(FindingIds", [])
if response.get("NextToken"): findings.extend(getNextToken(time, next_token))
return findings
